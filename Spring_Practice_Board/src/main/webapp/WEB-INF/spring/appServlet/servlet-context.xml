<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />



	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />



	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	
	<!-- 타일즈 관련 : 화면 레이아웃 기능 -->
	<!-- <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:tiles/*.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory" />
	</beans:bean>
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean> -->
	
	
	
	<!-- 다중 파일 업로드 기능 -->
	<!-- 멀티파트 리졸버 -->
    <beans:bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
       <!-- 최대로 업로드 가능한 파일 크기 -->
       <beans:property name="maxUploadSize" value="52428800" />
       <!-- 디스크에 임시 파일을 생성하기 전 메모리에 보관할 수 있는 최대 바이트의 크기 설정 -->
       <beans:property name="maxInMemorySize" value="1000000" />
       <!-- 파일 인코딩 -->
       <beans:property name="defaultEncoding" value="utf-8" />
    </beans:bean>
	
	
	
	<!-- 번역을 위한 인터셉터 구현 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 해당 경로에 요청에 대해서 -->
			<mvc:mapping path="/test/*.do"/> 
			<!-- 모든 경로에 대한 요청에 대해서 -->
			<!-- <mvc:mapping path="/*/*.do"/> -->
			<!-- 해당 클래스를 실행하라 -->
			<beans:bean class="com.myspring.Spring_Sts_Maven.ex05.LocaleInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	
	<!-- 그동안 Controller에 작성한 ViewName메서드(요청명으로부터 View이름을 얻기위한)를 분리해
	interceptor에서 처리 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 해당 경로에 요청에 대해서 -->
			<!-- <mvc:mapping path="/test/*.do"/>  -->
			<!-- 모든 경로에 대한 요청에 대해서 -->
			<mvc:mapping path="/*/*.do"/>
			<!-- 해당 클래스를 실행하라 -->
			<beans:bean class="com.myspring.Spring_Sts_Maven.member.interceptor.ViewNameInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	
	
	
	<context:component-scan base-package="com.myspring.Spring_Sts_Maven" />
	
</beans:beans>
