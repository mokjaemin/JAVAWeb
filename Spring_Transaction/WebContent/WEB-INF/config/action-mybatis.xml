<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:tx="http://www.springframework.org/schema/tx"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">


	<!-- DB연결 정보를 읽어옴 -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		<value>/WEB-INF/config/jdbc.properties</value>
		</property>
	</bean>


	<!-- 읽어온 정보를 저장 -->
	<bean id="dataSource"	class="org.apache.ibatis.datasource.pooled.PooledDataSource">
		<property name="driver" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>


	<!-- 읽어온 정보와 sql문 정보 주입 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:mybatis/mappers/*.xml" />
	</bean>


	<!-- 위에서 생성한 빈 주입 -->
	<!-- 팩토리 패턴의 한 형태 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>



	<!-- sqlSession 주입 -->
	<!-- 이는 action-service에서 사용됨 -->
   <bean id="accDAO" class="com.spring.account.AccountDAO">
      <property name="sqlSession" ref="sqlSession" />
   </bean>
    
    
    <!-- 트랜잭션 적용 -->
    <!-- dataSource 주입 -->
	<bean id="txManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	       <property name="dataSource" ref="dataSource" />
    </bean>
     
     
   <!-- Service 클래스에서 annotation을 통해 트랜잭션을 처리하기 위해 정의 -->
   <tx:annotation-driven transaction-manager="txManager" /> 


</beans>